spring.application.name=lor

#konfiguracja bazy danych
spring.datasource.url=jdbc:postgresql://localhost:5432/lor_test
spring.datasource.username=lor_app
spring.datasource.password=${LOR_DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
jwt.secret=${LOR_JWT_SECRET}

#konfiguracja integracji flyway
spring.flyway.url=jdbc:postgresql://localhost:5432/lor_test
spring.flyway.user=lor_flyway
spring.flyway.password=${LOR_FLYWAY_PASSWORD}
spring.flyway.locations=classpath:db/migration

#konfiguracja smtp do wysylki emaili
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${LOR_EMAIL_USER}
spring.mail.password=${LOR_EMAIL_PASS}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.from=${LOR_EMAIL_USER}

#konfiguracja cache
spring.cache.type=redis
spring.data.redis.host=localhost
spring.data.redis.port=6379

# ----------------------------
# Output (Publisher)
# ----------------------------
spring.cloud.stream.bindings.commentEvents-out-0.destination=comment-events
spring.cloud.stream.bindings.commentEvents-out-0.content-type=application/json

# ----------------------------
# Input (Consumer)
# ----------------------------
spring.cloud.stream.bindings.commentEvents-in-0.destination=comment-events
spring.cloud.stream.bindings.commentEvents-in-0.group=comment-listeners
spring.cloud.stream.bindings.commentEvents-in-0.content-type=application/json
spring.cloud.stream.kafka.bindings.commentEvents-in-0.consumer.configuration.spring.json.value.default.type=io.mhetko.lor.kafka.CommentEvent


# Polimorficzna deserializacja JSON
spring.cloud.stream.kafka.bindings.commentEvents-in-0.consumer.configuration.value.deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.cloud.stream.kafka.bindings.commentEvents-in-0.consumer.configuration.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.cloud.stream.kafka.bindings.commentEvents-in-0.consumer.configuration.spring.json.trusted.packages=io.mhetko.lor.kafka
spring.cloud.stream.kafka.bindings.commentEvents-in-0.consumer.configuration.spring.json.type.mapping=\
CommentCreatedEvent:io.mhetko.lor.kafka.CommentCreatedEvent,\
CommentUpdatedEvent:io.mhetko.lor.kafka.CommentUpdatedEvent,\
CommentRemovedEvent:io.mhetko.lor.kafka.CommentRemovedEvent
spring.cloud.stream.kafka.bindings.commentEvents-in-0.consumer.configuration.spring.json.use.type.headers=true

# Używamy standardowego nagłówka typów "__TypeId__"
spring.cloud.stream.bindings.commentEvents-in-0.consumer.header-mode=headers

# Nazwa funkcji konsumenta
spring.cloud.function.definition=commentEvents

# ----------------------------
# Opcjonalne: debug
# ----------------------------
logging.level.org.springframework.cloud.stream=DEBUG
logging.level.org.springframework.kafka=DEBUG
logging.level.io.mhetko.lor.kafka.CommentEventListener=DEBUG

